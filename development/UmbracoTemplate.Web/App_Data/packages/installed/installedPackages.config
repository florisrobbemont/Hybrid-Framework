<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="2" version="2.5" url="" name="Digibiz Advanced Media Picker" folder="013c87ac-4633-4320-95e7-4efe0e48926b" packagepath="" repositoryGuid="" packageGuid="" hasUpdate="False" enableSkins="False" skinRepoGuid="00000000-0000-0000-0000-000000000000">
    <license url="http://www.opensource.org/licenses/mit-license.php">MIT license</license>
    <author url="http://our.umbraco.org/member/4297">Jeroen Breuer</author>
    <readme><![CDATA[The Digibiz Advanced Media Picker 2.5 (DAMP 2.5) is a media picker with many awesome features. It can be used instead of the default media picker and is very user friendly. Here is a list of things it can do: 

- Store the complete media item in the umbraco xml (umbraco.config) or only the id. 
- Store a single or multiple media items in the media picker. 
- Define a minimum and maximum amount of media items. 
- Define a start node for the media tree. This can be done by a picker or XPath. 
- Choose which file extensions are allowed. 
- Choose which Media Types are allowed for selection and creation. 
- Edit the media item from the content section. 
- Use Pixlr (photoshop look a like) to modify images. 
- Fast performance using the Umbraco cache.
- Search]]></readme>
    <actions>
    </actions>
    <datatypes>
    </datatypes>
    <content nodeId="" loadChildNodes="False">
    </content>
    <templates>
    </templates>
    <stylesheets>
    </stylesheets>
    <documenttypes>
    </documenttypes>
    <macros>
    </macros>
    <files>
      <file>/bin/DigibizAdvancedMediaPicker.dll</file>
      <file>/bin/DigibizTree.dll</file>
      <file>//crossdomain.xml</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/Audio_icon.png</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/CreateMediaItem.aspx</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/DAMPScript.js</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/DAMPStyles.css</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/DAMP_ImagePreview.ashx</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/Delete.gif</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/DigibizAdvancedMediaPicker.ascx</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/DigibizService.asmx</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/Doc_icon.png</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/EditDAMP.aspx</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/Excel_icon.png</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/File_icon.png</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/Folder_icon.png</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/Installer.ascx</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/Logo.png</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/Pdf_icon.png</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/Pixlr.aspx</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/Power_icon.png</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/SavePixlr.aspx</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/SelectMediaItem.aspx</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/Text_icon.png</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/Video_icon.png</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/Zip_icon.png</file>
      <file>/Umbraco/plugins/DigibizAdvancedMediaPicker/Installer.ascx</file>
    </files>
    <languages>
    </languages>
    <dictionaryitems>
    </dictionaryitems>
    <loadcontrol>
    </loadcontrol>
  </package>
  <package id="3" version="1.2" url="" name="DAMP Property Editor Value Converter" folder="add37530-64ce-4d75-a165-568e6940cb74" packagepath="" repositoryGuid="" packageGuid="" hasUpdate="False" enableSkins="False" skinRepoGuid="00000000-0000-0000-0000-000000000000">
    <license url="http://www.opensource.org/licenses/mit-license.php">MIT license</license>
    <author url="http://our.umbraco.org/member/4297">Jeroen Breuer</author>
    <readme><![CDATA[With the DAMP Property Editor Value Converter it's easier to use DAMP in Razor. It can work with the xml or id's that DAMP saves. If you do Model.propertyName it will return a List of DAMP_Item-objects you can loop through.  It also has the following properties/methods:

IsXml - Returns a boolean if the data is stored as xml.
PropertyData - Returns a string with the raw data.
Count - Returns how many media items are selected.
First - Returns the first item from the List<DAMP_Item>
Any - Returns a boolean to see if any items are selected.
Xml - Returns all media items as DynamicXml.
Skip(int) - Used for paging.
Take(int) - Used for paging.

Each DAMP_Item-object has the following properties: 

Id - Returns the id of the media item.
Name - Returns the name of the media item.
Type - Returns the Media Type of the media item.
File - Returns the url of the media item if it exists.
Url - Also returns the url of the media item if it exists.
Alt - Returns the alt property. If it doesn't exist it will return the name.
Resized - Returns the resized property if it exists.
Xml - Returns the current media item as DynamicXml.
Children - Returns the children of this media item as List<DAMP_Item>
Crops - Returns a DynamicDictionary with all the crops.
TypedCrops - Returns the crops as a Dictionary<string, string>.]]></readme>
    <actions>
    </actions>
    <datatypes>
    </datatypes>
    <content nodeId="" loadChildNodes="False">
    </content>
    <templates>
    </templates>
    <stylesheets>
    </stylesheets>
    <documenttypes>
    </documenttypes>
    <macros>
    </macros>
    <files>
      <file>/bin/DAMP.PropertyEditorValueConverter.dll</file>
    </files>
    <languages>
    </languages>
    <dictionaryitems>
    </dictionaryitems>
    <loadcontrol>
    </loadcontrol>
  </package>
  <package id="4" version="1.0" url="" name="Digibiz Email Form with TinyMCE" folder="063bd2f8-22fe-47f9-bf52-ec6e11ed0462" packagepath="" repositoryGuid="" packageGuid="" hasUpdate="False" enableSkins="False" skinRepoGuid="00000000-0000-0000-0000-000000000000">
    <license url="http://www.opensource.org/licenses/mit-license.php">MIT license</license>
    <author url="http://www.digibiz.com">Jeroen Breuer</author>
    <readme><![CDATA[The Digibiz Email Form with TinyMCE is a datatype which makes it easy to store all the email fields in a single property of a documenttype. 

The DigibizEmailForm.dll contains a DEF_Helper class with some static methods which make it easy to get all the email fields. For a good example you can download the DemoProject.]]></readme>
    <actions>
    </actions>
    <datatypes>1044</datatypes>
    <content nodeId="" loadChildNodes="False">
    </content>
    <templates>
    </templates>
    <stylesheets>
    </stylesheets>
    <documenttypes>
    </documenttypes>
    <macros>
    </macros>
    <files>
      <file>/bin/DigibizEmailForm.dll</file>
      <file>/umbraco/plugins/DigibizEmailForm/DigibizEmailForm.ascx</file>
      <file>/umbraco/plugins/DigibizEmailForm/EmailFormInfo.png</file>
    </files>
    <languages>
    </languages>
    <dictionaryitems>
    </dictionaryitems>
    <loadcontrol>
    </loadcontrol>
  </package>
  <package id="7" version="5.4.0" url="" name="uComponents" folder="abe6e462-93d7-4d8b-a639-4ee013fae54c" packagepath="" repositoryGuid="" packageGuid="" hasUpdate="False" enableSkins="False" skinRepoGuid="00000000-0000-0000-0000-000000000000">
    <license url="http://www.opensource.org/licenses/mit-license.php">MIT license</license>
    <author url="http://ucomponents.org">uComponents Team</author>
    <readme><![CDATA[uComponents is a collaborative project for creating components for Umbraco including data types, XSLT extensions, controls and more.

Containing over 30 data-types, 10 XSLT extension libraries, keyboard short-cuts, drag-n-drop functionality, as well as great developer utilities - uComponents is one of the must-have packages for any Umbraco-powered website!

Full documentation can be found here: http://ucomponents.org

Visit the CodePlex site for full details, documentation, roadmap and source code.
http://ucomponents.codeplex.com
]]></readme>
    <actions>
      <Action runat="install" undo="true" alias="uComponents_Uninstaller" />
    </actions>
    <datatypes>
    </datatypes>
    <content nodeId="" loadChildNodes="False">
    </content>
    <templates>
    </templates>
    <stylesheets>
    </stylesheets>
    <documenttypes>
    </documenttypes>
    <macros>
    </macros>
    <files>
      <file>/bin/uComponents.Controls.dll</file>
      <file>/bin/uComponents.Core.dll</file>
      <file>/bin/uComponents.DataTypes.dll</file>
      <file>/bin/uComponents.Installer.dll</file>
      <file>/bin/uComponents.Legacy.dll</file>
      <file>/bin/uComponents.MacroEngines.dll</file>
      <file>/bin/uComponents.Mapping.dll</file>
      <file>/bin/uComponents.NotFoundHandlers.dll</file>
      <file>/bin/uComponents.UI.dll</file>
      <file>/bin/uComponents.XsltExtensions.dll</file>
      <file>/umbraco/plugins/uComponents/uComponentsInstaller.ascx</file>
    </files>
    <languages>
    </languages>
    <dictionaryitems>
    </dictionaryitems>
    <loadcontrol>
    </loadcontrol>
  </package>
  <package id="9" version="1.2" url="" name="Dewd" folder="2922d447-0594-4895-8fd9-c67e2f13cf47" packagepath="" repositoryGuid="" packageGuid="" hasUpdate="False" enableSkins="False" skinRepoGuid="00000000-0000-0000-0000-000000000000">
    <license url="http://www.opensource.org/licenses/mit-license.php">The MIT License (MIT)</license>
    <author url="http://eksponent.com">Eksponent</author>
    <readme><![CDATA[<strong style='display:block'>DEWD</strong>
        <p style='font-size:80%'>- Data Editing With DEWD</p>
        <p>
          All configuration is done in: /config/Eksponent.Dewd.config. Remember to give your user rights to access the new DEWD section.
        </p>
        <p>
          For more information, go to <a href='http://dewd.codeplex.com/'>http://dewd.codeplex.com/</a>
        </P>
		 ]]></readme>
    <actions>
      <Action runat="install" alias="addApplication" appName="dewd" appAlias="dewd" appIcon="dewd.png" />
      <Action runat="install" alias="addApplicationTree" silent="false" initialize="true" sortOrder="0" applicationAlias="dewd" treeAlias="dewd" treeTitle="Dewd" iconOpened=".sprTreeFolder_o" iconClosed=".sprTreeFolder" assemblyName="Eksponent" treeHandlerType="Dewd.Tree" action="" />
    </actions>
    <datatypes>1059,1060</datatypes>
    <content nodeId="" loadChildNodes="False">
    </content>
    <templates>
    </templates>
    <stylesheets>
    </stylesheets>
    <documenttypes>
    </documenttypes>
    <macros>
    </macros>
    <files>
      <file>/bin/Eksponent.Dewd.dll</file>
      <file>/config/Eksponent.Dewd.config</file>
      <file>/config/Eksponent.Dewd.Schema-v1.2.xsd</file>
      <file>/umbraco/plugins/Eksponent.Dewd/Edit.aspx</file>
      <file>/umbraco/plugins/Eksponent.Dewd/View.aspx</file>
      <file>/umbraco/images/tray/dewd.png</file>
      <file>/umbraco/plugins/Eksponent.Dewd/SaveAndReturn.png</file>
      <file>/umbraco/plugins/Eksponent.Dewd/cross.png</file>
      <file>/umbraco/plugins/Eksponent.Dewd/back.png</file>
      <file>/umbraco/plugins/Eksponent.Dewd/page_add.png</file>
      <file>/umbraco/plugins/Eksponent.Dewd/excel.png</file>
    </files>
    <languages>
    </languages>
    <dictionaryitems>
    </dictionaryitems>
    <loadcontrol>
    </loadcontrol>
  </package>
  <package id="11" version="1.0.0β3" url="" name="Eksponent CropUp" folder="d407fcfe-03bc-48d0-8b56-479c2adfa266" packagepath="" repositoryGuid="" packageGuid="" hasUpdate="False" enableSkins="False" skinRepoGuid="00000000-0000-0000-0000-000000000000">
    <license url="http://www.opensource.org/licenses/mit-license.php">LGPL license</license>
    <author url="http://www.eksponent.com">Niels Kühnel, Eksponent (@nielskuhnel)</author>
    <readme><![CDATA[# Eksponent CropUp #

Eksponent CropUp introduces a new concept for "One Crop Suits It All".

CropUp is a simple geometric algorithm for "weighted auto cropping". A gravity point and optional "area of interest" are defined (e.g. a face in a group pictures). These will always be shown in the cropped image not matter size.

It assumes that the editor, if possible, wants to show the entire image uploaded but that's rarely possible. Thus, it's not an online image editor.

[ImageResizer.NET](http://imageresizing.net/) is used for resizing

## Configuration ##
The configuration consists of two parts: *Roots*, and *croppings*.

### Croppings ###
The main idea with CropUp is that the editor doesn't have to define a crop area for every format you show on the webpage.
However, it is possible to define croppings, and it's a good idea as it allows the editor to:
1. See how the image will appear in different format
2. Manually override one or more of the formats if the the general focus point should be overriden.

    <cropUp referenceWidth="620" referenceHeight="480">
        <croppings>
            <add alias="thumb" name="Thumbnail" width="100" height="100" />
            <add alias="portrait" name="Portrait" width="320" height="400" />
            <add alias="banner" name="Banner" width="620" height="140" />
        </croppings>
    </cropUp>

*referenceWidth* and *referenceHeight* is used to treat very large and rather small uploaded source images identically.

They control when to crop and when to scale down. The default values are normally great, but if you feel like changing them they should reflect the largest images you normally show in your layout. 

## Usage ##


### .NET/Razor ###

Use CropUp.GetImageUrl

    @CropUp.GetImageUrl("~/media/1337/AngryDuck.png", new ImageSizeArguments { Width = 200})
    
The first parameter is the virtual location of the image. Remember to prefix with tilde (~) when using the umbracoFile property of images.
The second parameter controls how to size the image. 

* _Width_ and _Height_ are optional, and missing parameters will adjust to the image's aspect ratio.

* _CropAlias_ can be used to show one of the predefined croppings from the configuration. If not specified width and height from the configuration is used.

* CropMode specifies how to adjust the image. The following values are possible:
    * *BestFit* (default). CropUp is used, and the image will be scaled and/or cropped according to the editor's settings
    * *Max* The Width and Height parameters are max values. This means that the produced image will never exceed any of those. The lesser dimension will be adjusted to keep the image's aspect ratio.
    * *Pad* The entire image will always be shown, and white padding is added to produce an image with the dimensions specified
    
### XSLT ###

In Xslt you have four extension methods:

* _Eksponent.CropUp:Url(path, args)_. Same as the .NET counterpart above.
* _Eksponent.CropUp:UrlByMediaId(media id, args)_. Instead of path a media ID is specified. Normally you will probably use this. Note however, that it uses new Media(...) so if you're up for Examine enhanced media resolving you should use the other method somehow.

* _Responsive(path, args, cssClass, style, id)_ args specify the dimensions of the server generated image. 
   Add "Z" to enable zooming. ("300x200Z", "Z", etc.).
   Also to use progressive download (i.e. larger versions of the image are downloaded when needed) write either "server" or "progressive200"

* _Responsive(mediaId, args, cssClass, style, id)_ same as above but with an media ID instead.


_args_ is a string that specifies how to present the image.     

#### Examples ####
* "300x300" gives an image 300px x 300px
* "-x300" gives an image 300px high with width scaled to proportions
* "300x-" gives an image 300px wide with height scaled to proportions
* "banner" gives an image using the predefined banner cropping from the config file
* "300x500M" gives an image that is at most 300 px wide and/or 500 px high. It corresponds to the _CropUpMode.Max_ setting. "P" is _CropUpMode.Pad_
* Add "Z" to allow upscaling, e.g. "2000x500Z"
* "-" Do nothing. Show the source image.

This is the general format

    (((?<Width>(\-|[0-9]+))x(?<Height>(\-|[0-9]+)))?(?<Alias>[a-z]+)?(?<CropMode>[A-Y])?(?<Zoom>Z)?)


So to create a 300x300 image from a property called listImage on the current node, you would write

    <img>
        <xsl:attribute name="src">
          <xsl:value-of select="cropup:UrlByMediaId($currentPage/listImage, '300x300')" />        
        </xsl:attribute>   
    </img>    


### JavaScript ###

Include jQuery and the CropUp.js script.
Then you can write
<img src="/Content/Lighthouse.jpg" class="crop-up"
             style="width: 100%; height: 300px;"
             data-gravity=".2,.2"             
             data-zoom="true"
            />
and the algorithm will run client side.

    

## Performance/Caching ##
ImageResizer.NET is used to generate images. If ImageResizer.NET disk cache plugin is not installed memory will be used. That is fine for smaller solutions but consider purchasing the "Performance Bundle" from http://imageresizing.net/plugins/bundles/1 for larger solutions to enable disk caching ($99. CropUp is not affiliated with ImageResizer.NET).
]]></readme>
    <actions>
      <Action runat="install" undo="true" alias="addXsltExtension" assembly="Eksponent.CropUp.UmbracoIV" type="Eksponent.CropUp.Umbraco.Xslt.XsltHelpers" extensionAlias="Eksponent.CropUp" />
      <Action runat="install" undo="true" alias="CropUp_AddHttpModule" />
    </actions>
    <datatypes>
    </datatypes>
    <content nodeId="" loadChildNodes="False">
    </content>
    <templates>
    </templates>
    <stylesheets>
    </stylesheets>
    <documenttypes>
    </documenttypes>
    <macros>
    </macros>
    <files>
      <file>/bin/Eksponent.CropUp.dll</file>
      <file>/bin/Eksponent.CropUp.UmbracoIV.dll</file>
      <file>/bin/ImageResizer.dll</file>
      <file>/bin/ImageResizer.xml</file>
      <file>/bin/Accord.dll</file>
      <file>/bin/Accord.Imaging.dll</file>
      <file>/bin/Accord.MachineLearning.dll</file>
      <file>/bin/Accord.Math.dll</file>
      <file>/bin/Accord.Statistics.dll</file>
      <file>/bin/Accord.Vision.dll</file>
      <file>/bin/AForge.dll</file>
      <file>/bin/AForge.Imaging.dll</file>
      <file>/bin/AForge.Math.dll</file>
      <file>/config/Eksponent.CropUp.config</file>
    </files>
    <languages>
    </languages>
    <dictionaryitems>
    </dictionaryitems>
    <loadcontrol>
    </loadcontrol>
  </package>
  <package id="12" version="1.0" url="" name="Track Media" folder="66cf63a4-f700-46cf-bf4c-a4e7a8ed2d31" packagepath="" repositoryGuid="" packageGuid="" hasUpdate="False" enableSkins="False" skinRepoGuid="00000000-0000-0000-0000-000000000000">
    <license url="http://www.opensource.org/licenses/mit-license.php">MIT license</license>
    <author url="http://our.umbraco.org/member/4297">Jeroen Breuer</author>
    <readme><![CDATA[With Track Media you can see information about your media items in Google Analytics.]]></readme>
    <actions>
    </actions>
    <datatypes>
    </datatypes>
    <content nodeId="" loadChildNodes="False">
    </content>
    <templates>
    </templates>
    <stylesheets>
    </stylesheets>
    <documenttypes>
    </documenttypes>
    <macros>
    </macros>
    <files>
      <file>/bin/TrackMedia.dll</file>
      <file>/umbraco/plugins/TrackMedia/Installer.ascx</file>
      <file>/umbraco/plugins/TrackMedia/Tracking.js</file>
      <file>/umbraco/plugins/TrackMedia/TrackService.asmx</file>
      <file>/umbraco/plugins/TrackMedia/Installer.ascx</file>
    </files>
    <languages>
    </languages>
    <dictionaryitems>
    </dictionaryitems>
    <loadcontrol>
    </loadcontrol>
  </package>
  <package id="15" version="1.1.1" url="" name="SEO Checker" folder="e767f3a4-d3e8-469f-ba9f-dc4ad905eda4" packagepath="" repositoryGuid="" packageGuid="" hasUpdate="False" enableSkins="False" skinRepoGuid="00000000-0000-0000-0000-000000000000">
    <license url="http://www.opensource.org/licenses/mit-license.php">SEO Checker License Agreement</license>
    <author url="http://www.soetemansoftware.nl">Soeteman Software</author>
    <readme><![CDATA[SEO checker helps you find common SEO issues on your website such as missing  meta tags, broken links etc. SEO checker allows you to fix issues on the page before publishing the page. All validations are based on the "Search Engine Optimization Starter Guide" document from Google http://tinyurl.com/yjm24yq check the project page for a full list of validations.

SEO checker allows you to preview the Google search result snippet when editing content  and will give feedback about keyword usage in content and met information

SEO checker will report any inbound link that is broken and will automatically redirect to the correct page when a link pointing to your website uses the wrong extension, php instead of aspx for example and will automatically redirect to the correct page when an editor renames or moves a document.

SEO checker allows you to generate meta data based on existing content on the page, can automatically generate robot.txt and sitemap.xml files for you. 

SEO checker will also automatically solve canonical issues using its own URL Rewrite module. 

IMPORTANT: 
SEO checker requires IIS7 and is compatible with Umbraco version 4.8 and up. SEO checker is compatible with SQL Server 2005/2008 (Express), SQL CE 4  and Mysql
This installer will need modify rights to folders: /bin, /umbraco, and /app_data folder. For a manual installation read the documentation.

    ]]></readme>
    <actions>
      <Action runat="install" alias="SEOChecker_ConditionalFileCopyAction" source="~/app_data/temp/SEOChecker/SEOChecker.config" target="~/umbraco/plugins/SEOChecker/Config/SEOChecker.config" />
      <Action runat="install" alias="SEOChecker_ConditionalFileCopyAction" source="~/app_data/temp/SEOChecker/seochecker-notification.xslt" target="~/xslt/seochecker-notification.xslt" />
      <Action runat="install" alias="SEOChecker_ConditionalFileCopyAction" source="~/app_data/temp/SEOChecker/seochecker-scheduledtask.xslt" target="~/xslt/seochecker-scheduledtask.xslt" />
      <Action runat="install" alias="SEOCheckerLanguageFileInstallerAction" />
      <Action runat="install" alias="SEOChecker_SetExistingResponseForHttpErrors" />
      <Action runat="install" alias="SEOChecker_AddApplication" appName="SEO checker" appAlias="seochecker" appIcon="seochecker-tray.png" />
      <Action runat="install" alias="SEOChecker_AddApplicationTree" silent="false" initialize="true" sortOrder="9" applicationAlias="seochecker" treeAlias="seochecker" treeTitle="Seo Checker" iconOpened="folder_o.gif" iconClosed="folder.gif" assemblyName="SEOChecker" treeHandlerType="Trees.SEOCheckerTree" action="" />
      <Action runat="install" alias="SEOChecker_AddDashboardSection" dashboardAlias="SEOCheckerDashboardSection">
        <section>
          <areas>
            <area>seochecker</area>
          </areas>
          <tab caption="Get started">
            <control>/umbraco/plugins/seochecker/usercontrols/SeoCheckerDashboard.ascx</control>
          </tab>
        </section>
      </Action>
      <Action runat="install" alias="SEOChecker_Add404Handler" assembly="SEOChecker" type="Handlers.NotFoundHandlers.Inbound404Handler" />
      <Action runat="install" alias="addXsltExtension" assembly="/bin/SEOChecker.Library" type="SEOChecker.Library.XsltExtensions.MetaData" extensionAlias="seoChecker.MetaData" />
      <Action runat="install" alias="SEOChecker_AddHttpModule" position="end" name="SEOCheckerValidationqueueModule" type="SEOChecker.HttpModules.ValidationqueueModule, SEOChecker" />
      <Action runat="install" alias="SEOChecker_AddHttpModule" position="end" name="SEOCheckerUrlModule" type="SEOChecker.HttpModules.UrlModule, SEOChecker" />
      <Action runat="install" alias="SEOChecker_ClearClientDependencyCache" />
      <Action runat="install" alias="SEOChecker_GrantPermissionForApp" userLogin="$CurrentUser" appName="seochecker" />
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="umbraco.DataLayer.SqlHelpers.MySql.MySqlHelper"><![CDATA[
CREATE TABLE SEOCHECKER_CONFIGURATIONISSUES (
  IssueId int(11) NOT NULL AUTO_INCREMENT,
  ErrorCode nvarchar(50) NOT NULL,
  ValidatorAlias nvarchar(50) NOT NULL,
  ErrorDescription nvarchar(1000) DEFAULT NULL,
  Error nvarchar(50) DEFAULT NULL,
  ErrorType nvarchar(20) NOT NULL,
  Category nvarchar(59) NOT NULL,
  CrawlDate datetime NOT NULL,
  ResolvedDate datetime DEFAULT NULL,
  `Ignore` tinyint(1) NOT NULL,
  PRIMARY KEY (IssueId)
)
]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="umbraco.DataLayer.SqlHelpers.MySql.MySqlHelper"><![CDATA[
CREATE TABLE SEOCHECKER_PAGENOTFOUND (
  NotFoundId int(11) NOT NULL AUTO_INCREMENT,
  URL nvarchar(500) NOT NULL,
  DocumentID int(11) DEFAULT NULL,
  `Ignore` tinyint(1) NOT NULL,
  PRIMARY KEY (NotFoundId)
) 
]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="umbraco.DataLayer.SqlHelpers.MySql.MySqlHelper"><![CDATA[
CREATE TABLE SEOCHECKER_QUEUE (
  DocumentID int(11) NOT NULL,
  QueuedDateTime datetime NOT NULL,
  PRIMARY KEY (DocumentID)
) 
]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="umbraco.DataLayer.SqlHelpers.MySql.MySqlHelper"><![CDATA[
CREATE TABLE SEOCHECKER_ROBOTS (
  NodeId int(11) NOT NULL AUTO_INCREMENT,
  UserAgent nvarchar(100) NOT NULL,
  RequestDateTime datetime NOT NULL,
  PRIMARY KEY (NodeId)
) 
]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="umbraco.DataLayer.SqlHelpers.MySql.MySqlHelper"><![CDATA[
CREATE TABLE SEOCHECKER_URLHISTORY (
  UrlHistoryId int(11) NOT NULL AUTO_INCREMENT,
  NodeId int(11) NOT NULL,
  ParentId int(11) NOT NULL,
  UrlPart nvarchar(100) NOT NULL,
  PRIMARY KEY (UrlHistoryId)
) 
]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="umbraco.DataLayer.SqlHelpers.MySql.MySqlHelper"><![CDATA[
CREATE TABLE SEOCHECKER_VALIDATIONISSUES (
  IssueId int(11) NOT NULL AUTO_INCREMENT,
  DocumentID int(11) DEFAULT NULL,
  ErrorCode nvarchar(50) NOT NULL,
  ValidatorAlias nvarchar(50) NOT NULL,
  ErrorDescription nvarchar(1000) DEFAULT NULL,
  Error nvarchar(250) DEFAULT NULL,
  Template nvarchar(50) DEFAULT NULL,
  Category nvarchar(50) NOT NULL,
  ValidationType nvarchar(50) NOT NULL,
  ErrorType nvarchar(20) NOT NULL,
  PropertyAlias nvarchar(150) DEFAULT NULL,
  DataTypeId char(36) DEFAULT NULL,
  CrawlDate datetime NOT NULL,
  ResolvedDate datetime DEFAULT NULL,
  `Ignore` tinyint(1) NOT NULL,
  PRIMARY KEY (IssueId)
) 

      ]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="SqlCE4Umbraco.SqlCEHelper"><![CDATA[
CREATE TABLE seochecker_configurationissues (
  IssueId int NOT NULL IDENTITY(1,1),
  ErrorCode nvarchar(50) NOT NULL,
  ValidatorAlias nvarchar(50) NOT NULL,
  ErrorDescription nvarchar(1000) DEFAULT NULL,
  Error nvarchar(50) DEFAULT NULL,
  ErrorType nvarchar(20) NOT NULL,
  Category nvarchar(50) NOT NULL,
  CrawlDate datetime NOT NULL,
  ResolvedDate datetime DEFAULT NULL,
  Ignore bit NOT NULL,
  PRIMARY KEY (IssueId)
)
]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="SqlCE4Umbraco.SqlCEHelper"><![CDATA[
CREATE TABLE seochecker_pagenotfound (
  NotFoundId int NOT NULL IDENTITY(1,1),
  URL nvarchar(500) NOT NULL,
  DocumentID int DEFAULT NULL,
  Ignore bit NOT NULL,
  PRIMARY KEY (NotFoundId)
) 
]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="SqlCE4Umbraco.SqlCEHelper"><![CDATA[
CREATE TABLE seochecker_queue (
  DocumentID int NOT NULL,
  QueuedDateTime datetime NOT NULL,
  PRIMARY KEY (DocumentID)
) 
]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="SqlCE4Umbraco.SqlCEHelper"><![CDATA[
CREATE TABLE seochecker_robots (
  NodeId int NOT NULL IDENTITY(1,1),
  UserAgent nvarchar(100) NOT NULL,
  RequestDateTime datetime NOT NULL,
  PRIMARY KEY (NodeId)
) 
]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="SqlCE4Umbraco.SqlCEHelper"><![CDATA[
CREATE TABLE seochecker_urlhistory (
  UrlHistoryId int NOT NULL IDENTITY(1,1),
  NodeId int NOT NULL,
  ParentId int NOT NULL,
  UrlPart nvarchar(100) NOT NULL,
  PRIMARY KEY (UrlHistoryId)
) 
]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="SqlCE4Umbraco.SqlCEHelper"><![CDATA[
CREATE TABLE seochecker_validationissues (
  IssueId int NOT NULL IDENTITY(1,1),
  DocumentID int DEFAULT NULL,
  ErrorCode nvarchar(50) NOT NULL,
  ValidatorAlias nvarchar(50) NOT NULL,
  ErrorDescription nvarchar(1000) DEFAULT NULL,
  Error nvarchar(250) DEFAULT NULL,
  Template nvarchar(50) DEFAULT NULL,
  Category nvarchar(50) NOT NULL,
  ValidationType nvarchar(50) NOT NULL,
  ErrorType nvarchar(20) NOT NULL,
  PropertyAlias nvarchar(150) DEFAULT NULL,
  DataTypeId uniqueidentifier  DEFAULT NULL,
  CrawlDate datetime NOT NULL,
  ResolvedDate datetime DEFAULT NULL,
  Ignore bit NOT NULL,
  PRIMARY KEY (IssueId)
) 
      ]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="umbraco.DataLayer.SqlHelpers.SqlServer.SqlServerHelper"><![CDATA[
 CREATE TABLE [dbo].[SEOChecker_ValidationIssues](
	[IssueId] [int] IDENTITY(1,1) NOT NULL,
	[DocumentID] [int],
	[ErrorCode] [nvarchar](50) NOT NULL,
	[ValidatorAlias] [nvarchar](50) NOT NULL,
	[ErrorDescription] [nvarchar](1000) NULL,
	[Error] [nvarchar](250) NULL,
	[Template] [nvarchar](50) NULL,
	[Category] [nvarchar](50) NOT NULL,
	[ValidationType] [nvarchar](50) NOT NULL,
	[ErrorType] [nvarchar](20) NOT NULL,
	[PropertyAlias] [nvarchar](150) NULL,
	[DataTypeId] [uniqueidentifier] NULL,
	[CrawlDate] [SmallDateTime] NOT NULL,
	[ResolvedDate] [SmallDateTime]  NULL,
	[Ignore] [bit] NOT NULL,
 CONSTRAINT [PK_SEOChecker_ValidationIssues] PRIMARY KEY CLUSTERED 
(
	[IssueId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]


CREATE TABLE [dbo].[SEOChecker_ConfigurationIssues](
	[IssueId] [int] IDENTITY(1,1) NOT NULL,
	[ErrorCode] [nvarchar](50) NOT NULL,
	[ValidatorAlias] [nvarchar](50) NOT NULL,
	[ErrorDescription] [nvarchar](1000) NULL,
	[Error] [nvarchar](250) NULL,
	[ErrorType] [nvarchar](20) NOT NULL,
	[Category] [nvarchar](50) NOT NULL,
	[CrawlDate] [SmallDateTime] NOT NULL,
	[ResolvedDate] [SmallDateTime]  NULL,
	[Ignore] [bit] NOT NULL,
 CONSTRAINT [PK_[SEOChecker_ConfigurationIssues] PRIMARY KEY CLUSTERED 
(
	[IssueId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]



CREATE TABLE [dbo].[SEOChecker_Queue](
	[DocumentID] [int] NOT NULL,
	[QueuedDateTime] [smalldatetime] NOT NULL,
 CONSTRAINT [PK_SEOChecker_Queue] PRIMARY KEY CLUSTERED 
(
	[DocumentId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

CREATE TABLE [dbo].[SEOChecker_PageNotFound](
	[NotFoundId] [int] IDENTITY(1,1) NOT NULL,
	[Url] [nvarchar](500) NOT NULL,
	[DocumentID] [int],
	[Ignore] [bit] NOT NULL,
 CONSTRAINT [PK_SEOChecker_PageNotFound] PRIMARY KEY CLUSTERED 
(
	[NotFoundId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]


CREATE TABLE [dbo].[SEOChecker_Robots](
	[NodeId] [int] NOT NULL,
	[UserAgent] [nvarchar](100) NOT NULL,
	[RequestDateTime] [smalldatetime] NOT NULL
) ON [PRIMARY]


CREATE TABLE [dbo].[SEOChecker_URLHistory](
	[UrlHistoryId] [int] IDENTITY(1,1) NOT NULL,
	[NodeId] [int] NOT NULL,
	[ParentId] [int] NOT NULL,
	[UrlPart] [nvarchar](100) NOT NULL,
 CONSTRAINT [PK_SEOChecker_URLHistory] PRIMARY KEY CLUSTERED 
(
	[UrlHistoryId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

            ]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="umbraco.DataLayer.SqlHelpers.SqlServer.SqlServerHelper"><![CDATA[
            CREATE TABLE [dbo].SEOChecker_ScheduledValidation(
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[TaskName] [nvarchar](250) NOT NULL,
	[NotificationEmailAddress] [nvarchar](250) NOT NULL,
	[ExecuteEvery] [nvarchar](50) NOT NULL,
	[ExecuteDays] [nvarchar](50) NULL,
	[ExecuteHour] [int] NOT NULL,
	[ExecuteMinute] [int] NOT NULL,
	[ValidationRoot] [int] NOT NULL,
	[IncludeChildren] [bit] NOT NULL,
	[NextRun] [smalldatetime] NOT NULL,
	[LastTimeExecuted] [smalldatetime] NULL,
 CONSTRAINT [PK_SEOChecker_ScheduledValidation] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
            ]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="umbraco.DataLayer.SqlHelpers.SqlServer.SqlServerHelper"><![CDATA[
            ALTER TABLE [dbo].[SEOChecker_Queue]
ADD [Priority] int NOT NULL 
            ]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="umbraco.DataLayer.SqlHelpers.SqlServer.SqlServerHelper"><![CDATA[
    CREATE TABLE [dbo].[SEOChecker_Notifications](
    [Id] [int] IDENTITY(1,1) NOT NULL,
    [NotificationUser] [nvarchar](250) NOT NULL,
    [ExecuteEvery] [nvarchar](50) NOT NULL,
    [ExecuteDays] [nvarchar](50) NULL,
    [ExecuteHour] [int] NOT NULL,
    [ExecuteMinute] [int] NOT NULL,
    [NextRun] [smalldatetime] NOT NULL,
    CONSTRAINT [PK_SEOChecker_Notifications] PRIMARY KEY CLUSTERED
    (
    [Id] ASC
    )WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
    ) ON [PRIMARY]
     ]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="umbraco.DataLayer.SqlHelpers.MySql.MySqlHelper"><![CDATA[
CREATE TABLE SEOCHECKER_SCHEDULEDVALIDATION(
  Id int(11) NOT NULL AUTO_INCREMENT,
  TaskName nvarchar(250) NOT NULL,
  NotificationEmailAddress nvarchar(250) NOT NULL,
  ExecuteEvery nvarchar(50) NOT NULL,
  ExecuteDays nvarchar(50) DEFAULT NULL,
  ExecuteHour int(11) NOT NULL,
  ExecuteMinute int(11) NOT NULL,
  ValidationRoot int(11) NOT NULL,
  IncludeChildren tinyint(1) NOT NULL,
  NextRun datetime NOT NULL,
  LastTimeExecuted datetime DEFAULT NULL,
  PRIMARY KEY (Id)
)
]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="umbraco.DataLayer.SqlHelpers.MySql.MySqlHelper"><![CDATA[
            ALTER TABLE SEOChecker_QUEUE
ADD Priority int(11) NOT NULL 
            ]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="umbraco.DataLayer.SqlHelpers.MySql.MySqlHelper"><![CDATA[
    CREATE TABLE SEOCHECKER_NOTIFICATIONS(
Id int(11) NOT NULL AUTO_INCREMENT,
  NotificationUser nvarchar(250) NOT NULL,
  ExecuteEvery nvarchar(50) NOT NULL,
  ExecuteDays nvarchar(50) DEFAULT NULL,
  ExecuteHour int(11) NOT NULL,
  ExecuteMinute int(11) NOT NULL,
  NextRun datetime NOT NULL,
  PRIMARY KEY (Id))
     ]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="SqlCE4Umbraco.SqlCEHelper"><![CDATA[
            CREATE TABLE SEOChecker_ScheduledValidation(
            Id int NOT NULL IDENTITY(1,1),
	TaskName nvarchar(250) NOT NULL,
	NotificationEmailAddress nvarchar(250) NOT NULL,
	ExecuteEvery nvarchar(50) NOT NULL,
	ExecuteDays nvarchar(50) NULL,
	ExecuteHour int NOT NULL,
	ExecuteMinute int NOT NULL,
	ValidationRoot int NOT NULL,
	IncludeChildren bit NOT NULL,
	NextRun datetime NOT NULL,
	LastTimeExecuted datetime NULL,
	PRIMARY KEY(Id))

            ]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="SqlCE4Umbraco.SqlCEHelper"><![CDATA[
            ALTER TABLE SEOChecker_Queue
ADD Priority int NULL 
            ]]></Action>
      <Action runat="install" alias="SEOChecker_ExecuteSql" provider="SqlCE4Umbraco.SqlCEHelper"><![CDATA[
    CREATE TABLE SEOChecker_Notifications(
    Id int NOT NULL IDENTITY(1,1),
    NotificationUser nvarchar(250) NOT NULL,
    ExecuteEvery nvarchar(50) NOT NULL,
    ExecuteDays nvarchar(50) NULL,
    ExecuteHour int NOT NULL,
    ExecuteMinute int NOT NULL,
    NextRun datetime NOT NULL,
    PRIMARY KEY(Id))
     ]]></Action>
      <Action runat="install" alias="SEOChecker_AddTreeNodeType">
        <nodeType alias="seochecker">
          <header>Scheduled task</header>
          <usercontrol>/create/simple.ascx</usercontrol>
          <tasks>
            <delete assembly="SEOChecker.Core" type="Umbraco.Tasks.DeleteTask" />
          </tasks>
        </nodeType>
      </Action>
    </actions>
    <datatypes>1071</datatypes>
    <content nodeId="" loadChildNodes="False">
    </content>
    <templates>
    </templates>
    <stylesheets>
    </stylesheets>
    <documenttypes>
    </documenttypes>
    <macros>
    </macros>
    <files>
      <file>/bin/SEOChecker.Core.dll</file>
      <file>/bin/SEOChecker.dll</file>
      <file>/bin/SEOChecker.Library.dll</file>
      <file>/bin/SEOChecker.Resources.dll</file>
      <file>/bin/SEOChecker.UGoLive.dll</file>
      <file>/bin/SEOChecker.Validators.dll</file>
      <file>/bin/SEOChecker.Extensions.dll</file>
      <file>/bin/Umbraco.Licensing.dll</file>
      <file>/bin/PackageGarden.Licensing.dll</file>
      <file>/app_data/temp/SEOChecker/SEOChecker.config</file>
      <file>/umbraco/plugins/SEOChecker/css/seochecker.css</file>
      <file>/umbraco/plugins/SEOChecker/css/seochecker_advancedSettingsPanel.css</file>
      <file>/umbraco/plugins/SEOChecker/css/seochecker_datatype.css</file>
      <file>/umbraco/plugins/SEOChecker/Images/Actions/bug.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Actions/navigation.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Actions/delete.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Actions/document-pencil.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Actions/script-code.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Content/hammer-screwdriver.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Content/seochecker.png</file>
      <file>/umbraco/Images/Tray/seochecker-tray.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Tree/application-pencil.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Tree/calendar.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Tree/calendar-pencil.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Tree/mails.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Tree/mail.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Tree/mail-pencil.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Tree/inbox-arrow.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Tree/light-bulb.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Tree/chain-exclamation.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Tree/magnifier-zoom.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Tree/blue-document-text.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Tree/script-codeTree.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Tree/server-pencil.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Tree/table-pencil.png</file>
      <file>/umbraco/plugins/SEOChecker/Images/Tree/documents-stack.png</file>
      <file>/umbraco/plugins/SEOChecker/Pages/Validate.aspx</file>
      <file>/umbraco/plugins/SEOChecker/Pages/ValidationQueue.aspx</file>
      <file>/umbraco/plugins/SEOChecker/Pages/ScheduleValidation.aspx</file>
      <file>/umbraco/plugins/SEOChecker/Pages/notifications.aspx</file>
      <file>/umbraco/plugins/SEOChecker/Pages/LicenseError.aspx</file>
      <file>/umbraco/plugins/SEOChecker/Pages/Dialogs/ConfirmDelete.aspx</file>
      <file>/umbraco/plugins/SEOChecker/Pages/Dialogs/ConfirmDeleteIgnorelist.aspx</file>
      <file>/umbraco/plugins/SEOChecker/Pages/Dialogs/BulkAction.aspx</file>
      <file>/umbraco/plugins/SEOChecker/Pages/IgnoreList/IgnoredConfigurationIssues.aspx</file>
      <file>/umbraco/plugins/SEOChecker/Pages/IgnoreList/IgnoredInboundLinks.aspx</file>
      <file>/umbraco/plugins/SEOChecker/Pages/IgnoreList/IgnoredValidationIssues.aspx</file>
      <file>/umbraco/plugins/SEOChecker/Pages/Issues/ConfigurationIssues.aspx</file>
      <file>/umbraco/plugins/SEOChecker/Pages/Issues/InboundLinks.aspx</file>
      <file>/umbraco/plugins/SEOChecker/Pages/Issues/ValidationIssues.aspx</file>
      <file>/umbraco/plugins/SEOChecker/Pages/Settings/Config.aspx</file>
      <file>/umbraco/plugins/SEOChecker/Pages/Settings/DocumentTypeSettings.aspx</file>
      <file>/umbraco/plugins/SEOChecker/Pages/Settings/emailsettings.aspx</file>
      <file>/umbraco/plugins/SEOChecker/scripts/seochecker_advancedsettingspanel.js</file>
      <file>/umbraco/plugins/SEOChecker/scripts/seochecker.js</file>
      <file>/umbraco/plugins/SEOChecker/Usercontrols/SeoCheckerDashboard.ascx</file>
      <file>/umbraco/plugins/SEOChecker/Usercontrols//SEOCheckerInstaller.ascx</file>
      <file>/umbraco/plugins/SEOChecker/Usercontrols//validationpicker.ascx</file>
      <file>/umbraco/plugins/SEOChecker/Usercontrols//scheduledtaskoptions.ascx</file>
      <file>/app_data/temp/SEOChecker/seochecker-notification.xslt</file>
      <file>/app_data/temp/SEOChecker/seochecker-scheduledtask.xslt</file>
    </files>
    <languages>
    </languages>
    <dictionaryitems>
    </dictionaryitems>
    <loadcontrol>
    </loadcontrol>
  </package>
  <package id="17" version="1.3" url="" name="Diplo Trace Log Viewer" folder="b73deb9f-f93b-48cf-a329-3e5a61ea8025" packagepath="" repositoryGuid="" packageGuid="" hasUpdate="False" enableSkins="False" skinRepoGuid="00000000-0000-0000-0000-000000000000">
    <license url="http://www.opensource.org/licenses/mit-license.php">MIT license</license>
    <author url="http://www.diplo.co.uk/">Dan Booth</author>
    <readme><![CDATA[This package installs a Developer Dashboard control that allows you to browse, filter, search and view the contents of the Umbraco trace log files that are generated in the /App_Data/Logs/ folder. It doesn't contain any dinosaurs.

1.3 Adds persistence so that it remembers the state of ordering of columns, search terms etc. between log files. Also fixes some bugs with truncated columns.

]]></readme>
    <actions>
      <Action runat="install" alias="addDashboardSection" dashboardAlias="Trace Log Viewer">
        <section>
          <areas>
            <area>developer</area>
          </areas>
          <tab caption="Trace Log Viewer">
            <control>/umbraco/plugins/Diplo/DiploTraceLogViewer.ascx</control>
          </tab>
        </section>
      </Action>
    </actions>
    <datatypes>
    </datatypes>
    <content nodeId="" loadChildNodes="False">
    </content>
    <templates>
    </templates>
    <stylesheets>
    </stylesheets>
    <documenttypes>
    </documenttypes>
    <macros>
    </macros>
    <files>
      <file>/bin/Diplo.TraceLogViewer.dll</file>
      <file>/bin/Diplo.TraceLogViewer.pdb</file>
      <file>/Umbraco/Plugins/Diplo/DiploTraceLogViewer.ascx</file>
    </files>
    <languages>
    </languages>
    <dictionaryitems>
    </dictionaryitems>
    <loadcontrol>
    </loadcontrol>
  </package>
  <package id="18" version="1.0.0β3" url="" name="Eksponent CropUp" folder="4e875286-feff-4e69-991d-d5c5febf9bbf" packagepath="" repositoryGuid="" packageGuid="" hasUpdate="False" enableSkins="False" skinRepoGuid="00000000-0000-0000-0000-000000000000">
    <license url="http://www.opensource.org/licenses/mit-license.php">LGPL license</license>
    <author url="http://www.eksponent.com">Niels Kühnel, Eksponent (@nielskuhnel)</author>
    <readme><![CDATA[# Eksponent CropUp #

Eksponent CropUp introduces a new concept for "One Crop Suits It All".

CropUp is a simple geometric algorithm for "weighted auto cropping". A gravity point and optional "area of interest" are defined (e.g. a face in a group pictures). These will always be shown in the cropped image not matter size.

It assumes that the editor, if possible, wants to show the entire image uploaded but that's rarely possible. Thus, it's not an online image editor.

[ImageResizer.NET](http://imageresizing.net/) is used for resizing

## Configuration ##
The configuration consists of two parts: *Roots*, and *croppings*.

### Croppings ###
The main idea with CropUp is that the editor doesn't have to define a crop area for every format you show on the webpage.
However, it is possible to define croppings, and it's a good idea as it allows the editor to:
1. See how the image will appear in different format
2. Manually override one or more of the formats if the the general focus point should be overriden.

    <cropUp referenceWidth="620" referenceHeight="480">
        <croppings>
            <add alias="thumb" name="Thumbnail" width="100" height="100" />
            <add alias="portrait" name="Portrait" width="320" height="400" />
            <add alias="banner" name="Banner" width="620" height="140" />
        </croppings>
    </cropUp>

*referenceWidth* and *referenceHeight* is used to treat very large and rather small uploaded source images identically.

They control when to crop and when to scale down. The default values are normally great, but if you feel like changing them they should reflect the largest images you normally show in your layout. 

## Usage ##


### .NET/Razor ###

Use CropUp.GetImageUrl

    @CropUp.GetImageUrl("~/media/1337/AngryDuck.png", new ImageSizeArguments { Width = 200})
    
The first parameter is the virtual location of the image. Remember to prefix with tilde (~) when using the umbracoFile property of images.
The second parameter controls how to size the image. 

* _Width_ and _Height_ are optional, and missing parameters will adjust to the image's aspect ratio.

* _CropAlias_ can be used to show one of the predefined croppings from the configuration. If not specified width and height from the configuration is used.

* CropMode specifies how to adjust the image. The following values are possible:
    * *BestFit* (default). CropUp is used, and the image will be scaled and/or cropped according to the editor's settings
    * *Max* The Width and Height parameters are max values. This means that the produced image will never exceed any of those. The lesser dimension will be adjusted to keep the image's aspect ratio.
    * *Pad* The entire image will always be shown, and white padding is added to produce an image with the dimensions specified
    
### XSLT ###

In Xslt you have four extension methods:

* _Eksponent.CropUp:Url(path, args)_. Same as the .NET counterpart above.
* _Eksponent.CropUp:UrlByMediaId(media id, args)_. Instead of path a media ID is specified. Normally you will probably use this. Note however, that it uses new Media(...) so if you're up for Examine enhanced media resolving you should use the other method somehow.

* _Responsive(path, args, cssClass, style, id)_ args specify the dimensions of the server generated image. 
   Add "Z" to enable zooming. ("300x200Z", "Z", etc.).
   Also to use progressive download (i.e. larger versions of the image are downloaded when needed) write either "server" or "progressive200"

* _Responsive(mediaId, args, cssClass, style, id)_ same as above but with an media ID instead.


_args_ is a string that specifies how to present the image.     

#### Examples ####
* "300x300" gives an image 300px x 300px
* "-x300" gives an image 300px high with width scaled to proportions
* "300x-" gives an image 300px wide with height scaled to proportions
* "banner" gives an image using the predefined banner cropping from the config file
* "300x500M" gives an image that is at most 300 px wide and/or 500 px high. It corresponds to the _CropUpMode.Max_ setting. "P" is _CropUpMode.Pad_
* Add "Z" to allow upscaling, e.g. "2000x500Z"
* "-" Do nothing. Show the source image.

This is the general format

    (((?<Width>(\-|[0-9]+))x(?<Height>(\-|[0-9]+)))?(?<Alias>[a-z]+)?(?<CropMode>[A-Y])?(?<Zoom>Z)?)


So to create a 300x300 image from a property called listImage on the current node, you would write

    <img>
        <xsl:attribute name="src">
          <xsl:value-of select="cropup:UrlByMediaId($currentPage/listImage, '300x300')" />        
        </xsl:attribute>   
    </img>    


### JavaScript ###

Include jQuery and the CropUp.js script.
Then you can write
<img src="/Content/Lighthouse.jpg" class="crop-up"
             style="width: 100%; height: 300px;"
             data-gravity=".2,.2"             
             data-zoom="true"
            />
and the algorithm will run client side.

    

## Performance/Caching ##
ImageResizer.NET is used to generate images. If ImageResizer.NET disk cache plugin is not installed memory will be used. That is fine for smaller solutions but consider purchasing the "Performance Bundle" from http://imageresizing.net/plugins/bundles/1 for larger solutions to enable disk caching ($99. CropUp is not affiliated with ImageResizer.NET).
]]></readme>
    <actions>
      <Action runat="install" undo="true" alias="addXsltExtension" assembly="Eksponent.CropUp.UmbracoIV" type="Eksponent.CropUp.Umbraco.Xslt.XsltHelpers" extensionAlias="Eksponent.CropUp" />
      <Action runat="install" undo="true" alias="CropUp_AddHttpModule" />
    </actions>
    <datatypes>
    </datatypes>
    <content nodeId="" loadChildNodes="False">
    </content>
    <templates>
    </templates>
    <stylesheets>
    </stylesheets>
    <documenttypes>
    </documenttypes>
    <macros>
    </macros>
    <files>
      <file>/bin/Eksponent.CropUp.dll</file>
      <file>/bin/Eksponent.CropUp.UmbracoIV.dll</file>
      <file>/bin/ImageResizer.dll</file>
      <file>/bin/ImageResizer.xml</file>
      <file>/bin/Accord.dll</file>
      <file>/bin/Accord.Imaging.dll</file>
      <file>/bin/Accord.MachineLearning.dll</file>
      <file>/bin/Accord.Math.dll</file>
      <file>/bin/Accord.Statistics.dll</file>
      <file>/bin/Accord.Vision.dll</file>
      <file>/bin/AForge.dll</file>
      <file>/bin/AForge.Imaging.dll</file>
      <file>/bin/AForge.Math.dll</file>
      <file>/config/Eksponent.CropUp.config</file>
    </files>
    <languages>
    </languages>
    <dictionaryitems>
    </dictionaryitems>
    <loadcontrol>
    </loadcontrol>
  </package>
  <package id="19" version="1.0" url="" name="ezSearch" folder="19789bdb-9b47-4eb8-92ce-094207a4d370" packagepath="" repositoryGuid="" packageGuid="" hasUpdate="False" enableSkins="False" skinRepoGuid="00000000-0000-0000-0000-000000000000">
    <license url="http://www.opensource.org/licenses/mit-license.php">MIT license</license>
    <author url="http://our.umbraco.org">Matt Brailsford, Douglas Robar</author>
    <readme><![CDATA[ezSearch is the easy search solution for your Umbraco MVC websites. It's fast, self contained and completely configurable.

With ezSearch you can search for words and phrases in your content and media and have the results displayed in a paged list sorted by relevance and with search term highlighting.

ezSearch runs on Umbraco 6.0.4+ and is powered by the built in Lucene index and razor, giving you a fast yet flexible site search package.]]></readme>
    <actions>
    </actions>
    <datatypes>
    </datatypes>
    <content nodeId="" loadChildNodes="False">
    </content>
    <templates>1133</templates>
    <stylesheets>
    </stylesheets>
    <documenttypes>1134</documenttypes>
    <macros>1</macros>
    <files>
      <file>/App_Code/ezSearchBoostrapper.cs</file>
      <file>/bin/Our.Umbraco.ezSearch.dll</file>
      <file>/Views/MacroPartials/ezSearch.cshtml</file>
    </files>
    <languages>
    </languages>
    <dictionaryitems>1</dictionaryitems>
    <loadcontrol>
    </loadcontrol>
  </package>
  <package id="20" version="3.0.0" url="" name="Config Tree" folder="9cd014e5-5de8-437c-8f3a-63d0837f6c12" packagepath="" repositoryGuid="" packageGuid="" hasUpdate="False" enableSkins="False" skinRepoGuid="00000000-0000-0000-0000-000000000000">
    <license url="http://www.opensource.org/licenses/mit-license.php">MIT license</license>
    <author url="http://our.umbraco.org/">Tim Geyssens, Lee Kelleher</author>
    <readme><![CDATA[Add an extra tree to the developer section, called "Config Files".
This lists all the config files, including in sub-folders, to be edited.

In this version the Web.config is also available to edit.]]></readme>
    <actions>
    </actions>
    <datatypes>
    </datatypes>
    <content nodeId="" loadChildNodes="False">
    </content>
    <templates>
    </templates>
    <stylesheets>
    </stylesheets>
    <documenttypes>
    </documenttypes>
    <macros>
    </macros>
    <files>
      <file>/bin/Our.Umbraco.Tree.Config.dll</file>
      <file>/umbraco/developer/Config/config.gif</file>
      <file>/umbraco/developer/Config/editConfigFile.aspx</file>
    </files>
    <languages>
    </languages>
    <dictionaryitems>
    </dictionaryitems>
    <loadcontrol>
    </loadcontrol>
  </package>
</packages>